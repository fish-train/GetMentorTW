************************************
Технологии для технического писателя
************************************

Docs-as-Code
============

ReStructuredText
----------------

Язык разметки с единой спецификацией: https://docutils.sourceforge.io/rst.html

Sphinx
^^^^^^

Генератор доки: https://www.sphinx-doc.org/en/master/

Польза от изучения:

- возможность перевода текстов из коробки
- популярность
- поддержка Markdown
- выгрузка в различные форматы
  
AsciiDoc
--------

Язык разметки, специально разработанный для документирования: https://asciidoc.org/

Польза от изучения:

- богатая семантика языка
- интересные проекты
- выгрузка в различные форматы
  
Генераторы:

- AsciiDoctor: https://asciidoctor.org/
- Antora: https://antora.org/
  
Markdown
--------

Hugo
^^^^

Пожалуй, самый быстрый генератор: https://gohugo.io/

Можно сделать одностраничный сайт-резюме по шаблону, например: https://themes.gohugo.io/themes/hugo-goa/

Docusaurus
^^^^^^^^^^

Еще один генератор доки: https://docusaurus.io/

Польза от изучения:

- познакомиться с менеджером пакетов npm и библиотекой react.js

Reveal.js
^^^^^^^^^

Фреймворк для создания презентаций: https://revealjs.com/

Рисование диаграмм
------------------

- Mermaid: https://mermaid.js.org/
- Graphviz: https://graphviz.org/
- PlantUML: https://plantuml.com/ru/

DevOps и DocOps
===============

Автоматизировать отправку запросов к API Flussonic, например, в Jenkins: https://www.jenkins.io/

Автоматизировать сборку своего учебного проекта, например, в Github Pages: https://pages.github.com/

Польза от изучения:

- попробовать на себе задачи инженера
- стать ближе к инженерам, говорить с ними на одном языке
- понимать, что нужно инженерам в документации
  
API
===

Курс по документированию API: https://starkovden.github.io/

Инструменты для OpenAPI? которые у вас используются:

- Swagger: https://swagger.io/
- ReDoc: https://redocly.com/
- Slate: https://github.com/slatedocs/slate
  
Польза от изучения:

- попробовать на себе задачи разработчика
- стать ближе к разработчикам, говорить с ними на одном языке
- понимать, что нужно разработчикам в документации API
  
Язык программирования
=====================

Python
------

Язык, на котором написаны Foliant и MkDocs: 

- https://www.python.org/
- https://www.w3schools.com/python/default.asp

Польза от изучения:

- решение проблем с инструментами
- написание собственных утилит для автоматизации работы:
  
  - запуск локальных сборок
  - удаление неиспользуемых изображений из проекта доки

Веб-технологии
==============

HTML
----

https://www.w3schools.com/html/default.asp


Польза от изучения: 

- решение проблем с сайтом документации
- редактирование шаблонов сборки документации

CSS
---

https://www.w3schools.com/css/default.asp

Польза от изучения: редактирование шаблонов сборки документации.

Javascript
----------

https://www.w3schools.com/js/default.asp


Польза от изучения: написание скрипта для своей доки. Например, добавить кнопку, которая копирует URL страницы.

Jinja
-----

HTML-шаблонизатор: https://jinja.palletsprojects.com/en/3.1.x/

Польза от изучения: редактирование шаблонов сборки документации.

ГОСТ
====

Знания ГОСТ 19, ГОСТ 34. 

Не нужно их знать наизусь, важно понимать, где найти нужную информацию по оформлению, структуре и содержанию документов.

Польза от изучения:

- побороть страх перед ГОСТами, если он есть
- добавить строчку в резюме, если реально хочется этим заниматься